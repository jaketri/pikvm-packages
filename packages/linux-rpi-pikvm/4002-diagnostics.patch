commit d15d1fe11a44009b988cfc332e9ab731872c73d4
Author: Maxim Devaev <mdevaev@gmail.com>
Date:   Sun May 25 20:15:44 2025 +0300

    tc358743 diagnostics

diff --git a/drivers/media/i2c/tc358743.c b/drivers/media/i2c/tc358743.c
index d4fb57d5b..76d28d2f2 100644
--- a/drivers/media/i2c/tc358743.c
+++ b/drivers/media/i2c/tc358743.c
@@ -81,6 +81,7 @@ struct tc358743_state {
 	struct v4l2_ctrl *detect_tx_5v_ctrl;
 	struct v4l2_ctrl *audio_sampling_rate_ctrl;
 	struct v4l2_ctrl *audio_present_ctrl;
+	struct v4l2_ctrl *lanes_enough_ctrl;
 
 	struct delayed_work delayed_work_enable_hotplug;
 
@@ -92,6 +93,7 @@ struct tc358743_state {
 
 	struct v4l2_dv_timings timings;
 	u32 mbus_fmt_code;
+	u8 csi_lanes_max;
 	u8 csi_lanes_in_use;
 
 	struct gpio_desc *reset_gpio;
@@ -1309,6 +1311,8 @@ static int tc358743_log_status(struct v4l2_subdev *sd)
 			true);
 
 	v4l2_info(sd, "-----CSI-TX status-----\n");
+	v4l2_info(sd, "Lanes max: %u\n",
+			state->csi_lanes_max);
 	v4l2_info(sd, "Lanes needed: %d\n",
 			tc358743_num_csi_lanes_needed(sd));
 	v4l2_info(sd, "Lanes in use: %d\n",
@@ -1876,6 +1880,32 @@ static const struct v4l2_ctrl_config tc358743_ctrl_audio_present = {
 	.flags = V4L2_CTRL_FLAG_READ_ONLY,
 };
 
+static int tc358743_ctrl_g_volatile_lanes_enough(struct v4l2_ctrl *ctrl)
+{
+	struct tc358743_state *state = container_of(ctrl->handler,
+		struct tc358743_state, hdl);
+	struct v4l2_subdev *sd = &state->sd;
+
+	ctrl->val = (tc358743_num_csi_lanes_needed(sd) <= state->csi_lanes_max);
+	return 0;
+}
+
+static const struct v4l2_ctrl_ops tc358743_ctrl_lanes_enough_ops = {
+	.g_volatile_ctrl = tc358743_ctrl_g_volatile_lanes_enough,
+};
+
+static const struct v4l2_ctrl_config tc358743_ctrl_lanes_enough = {
+	.ops = &tc358743_ctrl_lanes_enough_ops,
+	.id = TC358743_CID_LANES_ENOUGH,
+	.name = "Lanes enough",
+	.type = V4L2_CTRL_TYPE_BOOLEAN,
+	.min = 0,
+	.max = 1,
+	.step = 1,
+	.def = 0,
+	.flags = V4L2_CTRL_FLAG_READ_ONLY | V4L2_CTRL_FLAG_VOLATILE,
+};
+
 /* --------------- PROBE / REMOVE --------------- */
 
 #ifdef CONFIG_OF
@@ -1928,6 +1958,8 @@ static int tc358743_probe_of(struct tc358743_state *state)
 		goto free_endpoint;
 	}
 
+	state->csi_lanes_max = endpoint.bus.mipi_csi2.num_data_lanes;
+
 	state->bus = endpoint.bus.mipi_csi2;
 
 	ret = clk_prepare_enable(refclk);
@@ -2100,6 +2132,9 @@ static int tc358743_probe(struct i2c_client *client)
 	state->audio_present_ctrl = v4l2_ctrl_new_custom(&state->hdl,
 			&tc358743_ctrl_audio_present, NULL);
 
+	state->lanes_enough_ctrl = v4l2_ctrl_new_custom(&state->hdl,
+			&tc358743_ctrl_lanes_enough, NULL);
+
 	sd->ctrl_handler = &state->hdl;
 	if (state->hdl.error) {
 		err = state->hdl.error;
diff --git a/include/media/i2c/tc358743.h b/include/media/i2c/tc358743.h
index b343650c2..0867ff624 100644
--- a/include/media/i2c/tc358743.h
+++ b/include/media/i2c/tc358743.h
@@ -113,5 +113,7 @@ struct tc358743_platform_data {
 #define TC358743_CID_AUDIO_SAMPLING_RATE (V4L2_CID_USER_TC358743_BASE + 0)
 /* Audio present status */
 #define TC358743_CID_AUDIO_PRESENT       (V4L2_CID_USER_TC358743_BASE + 1)
+/* If lanes number is enough for selected timing and format */
+#define TC358743_CID_LANES_ENOUGH        (V4L2_CID_USER_TC358743_BASE + 2)
 
 #endif
