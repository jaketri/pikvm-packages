diff --git a/drivers/usb/gadget/function/f_uac2.c b/drivers/usb/gadget/function/f_uac2.c
index 0219cd794..7ce117ba2 100644
--- a/drivers/usb/gadget/function/f_uac2.c
+++ b/drivers/usb/gadget/function/f_uac2.c
@@ -89,6 +89,7 @@ static int afunc_notify(struct g_audio *agdev, int unit_id, int cs);
 
 /* --------- USB Function Interface ------------- */
 
+#if 0
 enum {
 	STR_ASSOC,
 	STR_IF_CTRL,
@@ -123,6 +124,7 @@ static struct usb_string strings_fn[] = {
 	[STR_AS_IN_ALT1].s = "Capture Active",
 	{ },
 };
+#endif
 
 static const char *const speed_names[] = {
 	[USB_SPEED_UNKNOWN] = "UNKNOWN",
@@ -134,6 +136,7 @@ static const char *const speed_names[] = {
 	[USB_SPEED_SUPER_PLUS] = "SS+",
 };
 
+#if 0
 static struct usb_gadget_strings str_fn = {
 	.language = 0x0409,	/* en-us */
 	.strings = strings_fn,
@@ -143,6 +146,7 @@ static struct usb_gadget_strings *fn_strings[] = {
 	&str_fn,
 	NULL,
 };
+#endif
 
 static struct usb_interface_assoc_descriptor iad_desc = {
 	.bLength = sizeof iad_desc,
@@ -1045,11 +1049,13 @@ afunc_bind(struct usb_configuration *cfg, struct usb_function *fn)
 	if (ret)
 		return ret;
 
+#if 0
 	strings_fn[STR_ASSOC].s = uac2_opts->function_name;
 
 	us = usb_gstrings_attach(cdev, fn_strings, ARRAY_SIZE(strings_fn));
 	if (IS_ERR(us))
 		return PTR_ERR(us);
+#endif
 
 	if (FUOUT_EN(uac2_opts)) {
 		out_feature_unit_desc = build_fu_desc(uac2_opts->c_chmask);
@@ -1064,6 +1070,7 @@ afunc_bind(struct usb_configuration *cfg, struct usb_function *fn)
 		}
 	}
 
+#if 0
 	iad_desc.iFunction = us[STR_ASSOC].id;
 	std_ac_if_desc.iInterface = us[STR_IF_CTRL].id;
 	in_clk_src_desc.iClockSource = us[STR_CLKSRC_IN].id;
@@ -1087,6 +1094,7 @@ afunc_bind(struct usb_configuration *cfg, struct usb_function *fn)
 				in_feature_unit_desc->bLength - 1;
 		*i_feature = us[STR_FU_IN].id;
 	}
+#endif
 
 
 	/* Initialize the configurable parameters */
